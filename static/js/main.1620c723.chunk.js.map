{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","circle_style","width","height","border","borderRadius","cursor","className","mode","href","title","type","id","aboutText","style","backgroundColor","onClick","bgcol","toggleMode","htmlFor","TextForm","useState","text","setText","heading","value","color","onChange","event","console","log","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","text2","replace","trim","split","filter","element","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","x","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1620c723.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    let circle_style={\r\n        width:'20px',\r\n        height:'20px',\r\n        border:'1px solid',\r\n        borderRadius:'50%',\r\n        cursor:'pointer'\r\n    }\r\n    /* \r\n    function letse(x) {\r\n        document.body.style.backgroundColor=x;\r\n    }*/\r\n    return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">{props.aboutText}</a>\r\n            </li>\r\n            \r\n            </ul>\r\n            {/*<form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form>*/}\r\n            <div className=\"circle mx-2\" style={{...{backgroundColor:'red'}, ...circle_style}} onClick={()=>props.bgcol('red')}></div>\r\n            <div className=\"circle mx-2\" style={{...{backgroundColor:'blue'}, ...circle_style}} onClick={()=>props.bgcol('blue')}></div>\r\n            <div className=\"circle mx-2\" style={{...{backgroundColor:'green'}, ...circle_style}} onClick={()=>props.bgcol('green')}></div>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode==='light'?'Dark':'Light'} mode</label>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </nav>\r\n    )\r\n}\r\nNavbar.propTypes={title:PropTypes.string,\r\n                aboutText:PropTypes.string\r\n}\r\n","import React,{useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUPclick=()=>{\r\n        console.log(\"handleupclicked\"+text);\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"UpperCase done\",\"success\");\r\n    }\r\n    const handleUPchange=(event)=>{\r\n        console.log(\"handleupchanged\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleLOclick=()=>{\r\n        setText(text.toLowerCase());\r\n        props.showAlert(\"LowerCase done\",\"success\");\r\n    }\r\n    const handleclearclick=()=>{\r\n        setText(\"\");\r\n        props.showAlert(\"Text cleared\",\"success\");\r\n    }\r\n    const handlecopyclick=()=>{\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Text copied\",\"success\");\r\n    }\r\n    const handleExtraSpace=()=>{\r\n        let text2=text.replace(/\\s{2,}/g, ' ').trim();\r\n        setText(text2);\r\n        props.showAlert(\"Extra Spaces Removed\",\"success\");\r\n        //let text2=text.split(' ').filter(word => word).join(' ');\r\n    }\r\n    const [text,setText]=useState(\"\");\r\n    return (\r\n        \r\n        <div>\r\n            <div className=\"container\">\r\n                <h1>{props.heading}</h1>\r\n                \r\n                <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} style={props.mode==='light'?{color:'#041a30',backgroundColor:'white'}:{color:'white',backgroundColor:'#041a30'}}  onChange={handleUPchange} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUPclick}>Change to upper case</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLOclick}>Change to Lower case</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleclearclick}>Clear</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handlecopyclick}>Copy text</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpace}>Clear extra spaces</button>\r\n                <div className=\"container my-3\">\r\n                    <h2>Your text summary</h2>\r\n                    <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length}word {text.length} characters</p>\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        let lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n","//import logo from './logo.svg';\nimport { useState } from 'react/cjs/react.development';\nimport './App.css';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n/*import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";*/\nfunction App() {\n  const toggleMode=()=>{\n    if(mode==='light')\n    {\n      setMode(\"dark\");\n      document.body.style.backgroundColor='#041a30';\n      document.body.style.color='white';\n      showAlert(\"Dark mode enabled\",\"success\");\n    }\n    else\n    {\n      setMode(\"light\");\n      document.body.style.backgroundColor='white';\n      document.body.style.color='#041a30';\n      showAlert(\"Light mode enabled\",\"success\");\n    }\n  }\n  function letse(x) {\n    document.body.style.backgroundColor=x;\n  }\n  const [mode,setMode]=useState(\"light\");\n  const [alert,setAlert]=useState(null);\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },1500)\n  }\n  return (\n    <>\n    {/*<Router>*/}\n      <Navbar title=\"TextUtils\" aboutText=\"About us\" mode={mode} toggleMode={toggleMode} bgcol={letse}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      {/*<Switch>*/}\n          {/*<Route eaxt path=\"/about\">*/}\n            {/*<About mode={mode}/>*/}\n          {/*</Route>*/}\n          {/*<Route eaxt path=\"/\">*/}\n            <TextForm heading=\"Enter the text to anlyse:\" mode={mode} showAlert={showAlert}/>\n         {/* </Route>*/}\n        {/*</Switch>*/}\n      </div>\n      {/*<About/>*/}\n   {/* </Router>*/}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}